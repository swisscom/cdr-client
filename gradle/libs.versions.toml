[versions]
jdk="17"
kotlin-lang = "2.2.0"
compose-multiplatform = "1.8.1"
compose-native-tray = "0.6.4"
kotlin-logging = "7.0.6"
kotlinx-coroutines = "1.10.2"
kotlinx-serialization="1.8.1"
detekt = "1.23.8"
awaitility="4.3.0"
jacoco="0.8.13"
kache="2.1.1"
kfs-watch="1.3.0"
logstash-encoder="8.1"
mockk="1.13.17"
spring-mockk="4.0.2"
msal4j="1.19.1"
okHttp="4.12.0"
spring-cloud="2024.0.1"
spring-boot="3.4.5"
spring-dependency-management="1.1.7"
docker-compose="0.17.12"
conveyor-plugin = "1.12"
androidx-lifecycle = "2.8.4"
conveyor-control-api = "1.1"
jna = "5.17.0"
ui-tiles = "2.10.0"

[libraries]
kache = { group = "com.mayakapps.kache", name = "kache", version.ref = "kache" }
msal4j = { group = "com.microsoft.azure", name = "msal4j", version.ref = "msal4j" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okHttp" }
kfswatch = { group = "io.github.irgaly.kfswatch", name = "kfswatch", version.ref = "kfs-watch" }
kotlin-logging = { group = "io.github.oshai", name = "kotlin-logging-jvm", version.ref = "kotlin-logging" }
micrometer-tracing = { group = "io.micrometer", name = "micrometer-tracing" }
micrometer-tracing-bridge-otel = { group = "io.micrometer", name = "micrometer-tracing-bridge-otel" }
logstash-encoder = { group = "net.logstash.logback", name = "logstash-logback-encoder", version.ref = "logstash-encoder" }
kotlin-reflect = { group = "org.jetbrains.kotlin", name = "kotlin-reflect", version.ref = "kotlin-lang" }
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin-lang" }
kotlinx-coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactor = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
spring-boot-dependencies = { group = "org.springframework.boot", name = "spring-boot-dependencies", version.ref = "spring-boot" }
spring-boot-starter-actuator = { group = "org.springframework.boot", name = "spring-boot-starter-actuator" }
spring-boot-starter-webflux = { group = "org.springframework.boot", name = "spring-boot-starter-webflux" }
spring-retry = { group = "org.springframework.retry", name = "spring-retry" }
spring-cloud-dependencies = { group = "org.springframework.cloud", name = "spring-cloud-dependencies", version.ref = "spring-cloud" }
jackson-dataformat-yaml = { group = "com.fasterxml.jackson.dataformat", name = "jackson-dataformat-yaml" }
jackson-module-kotlin = { group = "com.fasterxml.jackson.module", name = "jackson-module-kotlin" }
conveyor-control = { group = "dev.hydraulic.conveyor", name = "conveyor-control", version.ref = "conveyor-control-api" }
jna = { group = "net.java.dev.jna", name = "jna-platform", version.ref = "jna" }
uitiles = { group = "com.github.alorma.compose-settings", name = "ui-tiles", version.ref = "ui-tiles" }
compose-native-tray = { group = "io.github.kdroidfilter", name = "composenativetray", version.ref = "compose-native-tray" }
#### TEST DEPENDENCIES ####
jacocoCore = { group = "org.jacoco", name = "org.jacoco.core", version.ref = "jacoco" }
spring-boot-starter-test = { group = "org.springframework.boot", name = "spring-boot-starter-test" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test" }
mock-webserver = { group = "com.squareup.okhttp3", name = "mockwebserver", version.ref = "okHttp" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
junit-jupiter = { group = "org.junit.jupiter", name = "junit-jupiter" }
micrometer-tracing-test = { group = "io.micrometer", name = "micrometer-tracing-test" }
spring-mockk = { group = "com.ninja-squad", name = "springmockk", version.ref = "spring-mockk" }
awaitility = { group = "org.awaitility", name = "awaitility", version.ref = "awaitility" }

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
docker-compose = { id = "com.avast.gradle.docker-compose", version.ref = "docker-compose" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependency-management = { id = "io.spring.dependency-management", version.ref = "spring-dependency-management" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin-lang" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-lang" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin-lang" }
conveyor = { id = "dev.hydraulic.conveyor", version.ref = "conveyor-plugin" }

